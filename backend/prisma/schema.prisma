generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model actions {
  id     Int    @id @default(autoincrement()) @db.UnsignedInt
  name   String @unique(map: "name") @db.VarChar(60)
  points Int    @db.UnsignedInt
  logs   logs[]
}

model departments {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  name             String             @db.VarChar(50)
  departments_logs departments_logs[]
}

model departments_logs {
  id                Int          @id @default(autoincrement()) @db.UnsignedInt
  department_id     Int?         @db.UnsignedInt
  log_id            Int?         @db.UnsignedInt
  mf                Int          @default(1)
  attendants_number Int?         @db.UnsignedInt
  departments       departments? @relation(fields: [department_id], references: [id], onDelete: Cascade, map: "departments_logs_ibfk_1")
  logs              logs?        @relation(fields: [log_id], references: [id], onDelete: Cascade, map: "departments_logs_ibfk_2")

  @@unique([department_id, log_id], map: "unique_department_log")
  @@index([log_id], map: "log_id")
}

model logs {
  id               Int                @id @default(autoincrement()) @db.UnsignedInt
  action_id        Int?               @db.UnsignedInt
  start_date       DateTime           @db.Date
  end_date         DateTime           @db.Date
  event_id         Int?               @db.UnsignedInt
  departments_logs departments_logs[]
  events           events?            @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_events")
  actions          actions?           @relation(fields: [action_id], references: [id], onDelete: Cascade, map: "logs_ibfk_1")
  members_logs     members_logs[]
  modifications    modifications[]

  @@index([action_id], map: "action_id")
  @@index([event_id], map: "fk_events")
}

model members {
  id           Int            @id @default(autoincrement()) @db.UnsignedInt
  name         String         @db.VarChar(50)
  email        String?        @unique(map: "email") @db.VarChar(100)
  phone_number String?        @unique(map: "phone_number") @db.VarChar(20)
  uni_id       String         @unique(map: "uni_id") @db.VarChar(50)
  members_logs members_logs[]
}

model members_logs {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  member_id Int?     @db.UnsignedInt
  log_id    Int?     @db.UnsignedInt
  members   members? @relation(fields: [member_id], references: [id], onDelete: Cascade, map: "members_logs_ibfk_1")
  logs      logs?    @relation(fields: [log_id], references: [id], onDelete: Cascade, map: "members_logs_ibfk_2")

  @@unique([member_id, log_id], map: "unique_member_log")
  @@index([log_id], map: "log_id")
}

model modifications {
  id     Int                @id @default(autoincrement()) @db.UnsignedInt
  log_id Int?               @db.UnsignedInt
  type   modifications_type
  value  Int                @db.UnsignedInt
  logs   logs?              @relation(fields: [log_id], references: [id], onDelete: Cascade, map: "modifications_ibfk_1")

  @@index([log_id], map: "log_id")
}

model events {
  id   Int     @id @default(autoincrement()) @db.UnsignedInt
  name String? @db.VarChar(150)
  logs logs[]
}

view members_points {
  id          Int    @default(0) @db.UnsignedInt
  member_name String @map("member name") @db.VarChar(50)
  action_name String @map("action name") @db.VarChar(60)
  points      Int    @db.UnsignedInt
}

view departments_points {
  id              Int    @default(0) @db.UnsignedInt
  department_name String @map("department name") @db.VarChar(50)
  action_name     String @map("action name") @db.VarChar(60)
  points          Int    @db.UnsignedInt
}

view members_history {
  id            Int      @default(0) @db.UnsignedInt
  start_date    DateTime @db.Date
  name          String   @db.VarChar(50)
  action_name   String   @db.VarChar(60)
  action_points Int      @db.UnsignedInt
  event_name    String?  @db.VarChar(150)
}

view departments_history {
  id            Int      @default(0) @db.UnsignedInt
  start_date    DateTime @db.Date
  name          String   @db.VarChar(50)
  action_name   String   @db.VarChar(60)
  action_points Int      @db.UnsignedInt
  event_name    String?  @db.VarChar(150)
}

enum modifications_type {
  bonus
  discount
}
